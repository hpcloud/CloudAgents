# This is the config file for Cloud Agents, it combines the configuration
# for multiple services into one file.  If the components are installed
# in a distributed environment, only the section applying to the component is
# needed.

# Copyright 2013 Hewlett-Packard Development Company, L.P.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

[API]

# Usually https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0

identity_url = *api_identity_url*

# Information for connecting to our MySQL instance

db_host = *api_db_host*
db_user = *api_db_user*
db_pass = *api_db_pass*
db_name = *api_db_name*

# Usually localhost and 8080 for local development

bind_address = *api_bind_address*
bind_port = *api_bind_port*

# Which makes this http://localhost:8080

site_url = *api_site_url*

# Crypt for development generally lives at http://localhost:8082

crypt_url = *api_crypt_url*

# Set this to 'base64' if you want to run without a crypt server,
# otherwise 'server'.

crypt_method = *api_crypt_method*

# Cache our keystone authorization checks for speed (True/False)

auth_cache = *api_auth_cache*

[Dispatch]

# Usually https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0

identity_url = *dispatch_identity_url*

# Information for connecting to our MySQL instance

db_host = *dispatch_db_host*
db_user = *dispatch_db_user*
db_pass = *dispatch_db_pass*
db_name = *dispatch_db_name*

# Usually http://localhost:8081 in a dev environment

runner_url = *dispatch_runner_url*

# Usually http://localhost:8082 in a dev environment

crypt_url = *dispatch_crypt_url*

# Set this to 'base64' if you want to run without a crypt server,
# otherwise 'server'.

crypt_method = *dispatch_crypt_method*

# Usually something like 10

max_workers = *dispatch_max_workers*

sendgrid_user = *dispatch_sendgrid_username*
sendgrid_pass = *dispatch_sendgrid_password*

# Generally http://localhost:8080 for local development

api_url = *dispatch_api_url*

[Runner]

# The directory we create new temporary agent run directories in,
# needs to be writable by the runner process.

agent_dir = *runner_agent_dir*

# Path to the ca-fetcher.py script.

fetcher_path = *runner_fetcher_path*

# Path to where our CloudAgents.py library lives, that we auto-insert.

lib_dir = *runner_lib_dir*

# Usually localhost and 8081 for local development

bind_address = *runner_bind_address*
bind_port = *runner_bind_port*

# Do we chroot our processes, or is this a straight-run dev env. (True/False)

chroot_process = *runner_chroot_process*

# Our min and max for user IDs and group IDs.

randmin = *runner_randmin*
randmax = *runner_randmax*

# Path to where our local agent scripts live outside of chroot.

fetcher_store = *runner_fetcher_store_basepath*

# Path to where our local agent scripts live in the chroot.

fetcher_store_basepath = *runner_fetcher_store_basepath*

# Where our slug file system lives

slug_path = *runner_slug_path*

# Where our tmp file system lives (writable)

slug_tmp_path = *runner_slug_tmp_path*

# Where our slug file system is mounted

slug_mount = *runner_slug_mount*

# Where the tmp directories are mounted

slug_tmp_mount = *runner_slug_tmp_mount*

[Crypt]

# Information for connecting to our MySQL instance

db_host = *crypt_db_host*
db_user = *crypt_db_user*
db_pass = *crypt_db_pass*
db_name = *crypt_db_name*

# Usually localhost and 8082 for local development

bind_address = *crypt_bind_address*
bind_port = *crypt_bind_port*

# Prefix for our crypt environment.
# This gets pre-pended to every encrypted message, so keep it short.

storename = *crypt_storename*
